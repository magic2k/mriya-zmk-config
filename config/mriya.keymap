/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC         &kp N1  &kp N2    &kp N3      &kp N4       &kp N5       &kp N6     &kp N7         &kp N8     &kp N9   &kp N0    &kp MINUS
&kp LWIN  &kp TAB         &kp Q   &kp W     &kp E       &kp R        &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
          &kp LCTRL       &kp A   &kp S     &kp D       &kp F        &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp LS(SQT)
          &kp LEFT_SHIFT  &kp Z   &kp X     &kp C       &kp V        &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                                  &kp LGUI  &lt 2 LALT  &lt 1 SPACE  &kp SPACE    &kp ENTER  &kp BACKSPACE  &lt 2 DEL  &to 1
            >;
        };

        lower_layer {
            bindings = <
        &trans     &trans    &trans  &trans    &trans    &trans       &trans     &trans    &trans    &trans    &trans    &trans
&trans  &kp GRAVE  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11  &mt RGUI F12
        &trans     &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
        &trans     &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &trans
                             &trans  &none     &trans    &trans       &trans     &trans    &none     &trans
            >;
        };

        raise_layer {
            bindings = <
        &trans      &trans           &trans     &trans     &trans     &trans          &trans        &trans     &trans          &trans       &trans           &trans
&trans  &kp KP_NUM  &kp CAPSLOCK     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp PG_UP  &kp UP_ARROW    &kp HOME     &kp PRINTSCREEN  &kp INSERT  &trans
        &trans      &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT   &kp DOWN_ARROW  &kp RIGHT    &kp SCROLLLOCK   &kp EQUAL
        &trans      &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp PG_DN  &kp DOWN        &kp END      &kp PAUSE_BREAK  &trans
                                     &trans     &trans     &trans     &lt 3 SPACE     &trans        &trans     &trans          &lt 3 TILDE
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &bt BT_CLR      &bt BT_CLR    &none         &none         &none         &none         &bootloader  &none
       &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
